public class SampleString {
    public static void concatenation() {
//String Concatenation
        String str1 = "Rock";
        String str2 = "Star";
//Approach 1 : Using concat
        String str3 = str1.concat(str2);
        System.out.println(str3);
//Approach 2 : Using "+" operator
        String str4 = str1 + str2;
        System.out.println(str4);}

    //String "Length" Method
    //Determining length of given string
    public static void stringLength() {
        //Sample string for this tutorial
        String str_Sample = "RockStar";
        //Length of a String
        System.out.println("Length of String: " + str_Sample.length());}

    //String "indexOf" Method
    //Finding the index of a specified character using "indexOf" method
    public static void determineLocation() {
            //Character at position
            String str_Sample = "RockStar";
            System.out.println("Character at position 5: " + str_Sample.charAt(5));
            //Index of a given character
            System.out.println("Index of character 'S': " + str_Sample.indexOf('S'));}

    //String "charAt" Method
    //Using the “charAt” method to provide the index of the character that needs to be found
    public static void characterLocation() {
        //Character at position
        String str_Sample = "RockStar";
        System.out.println("Character at position 5: " + str_Sample.charAt(5));}

    //String "CompareTo" Method
    //Checking if the String that was generated by some method, is equal to something that I want to verify it with
    public static void compareStrings() {
        //Compare to a String
        String str_Sample = "RockStar";
        System.out.println("Compare To 'ROCKSTAR': " + str_Sample.compareTo("rockstar"));
        //Compare to - Ignore case
        System.out.println("Compare To 'ROCKSTAR' - Case Ignored: " + str_Sample.compareToIgnoreCase("ROCKSTAR"));}


    //String "Contain" Method
    //Its partially known what the string should have contained...
    //...confirming if the String contains a sequence of characters specified using method "contains" and
    // specifying the characters that need to be checked
    //Returns true if and only if this string contains the specified sequence of char values.
    public static void containsSequence() {
        //Check if String contains a sequence
        String str_Sample = "RockStar";
        System.out.println("Contains sequence 'tar': " + str_Sample.contains("tar"));}


    //String "endsWith" Method
    //How to confirm if a String ends with a particular suffix
    //Returns true if the character sequence represented by the argument is a suffix of the character sequence represented by this object
    public static void endsWithSuffix() {
        //Check if ends with a particular sequence
        String str_Sample = "RockStar";
        System.out.println("EndsWith character 'r': " + str_Sample.endsWith("r"));}


    //String "replaceAll" & "replaceFirst" Method
    //Modifying String at several places and replacing several parts of the String
    //Java String Replace, replaceAll and replaceFirst methods.
    public static void modifyStrings() {
        //Replace Rock with the word Duke
        String str_Sample = "RockStar";
        System.out.println("Replace 'Rock' with 'Duke': " + str_Sample.replace("Rock", "Duke"));}


    //String Java "tolowercase" & Java "touppercase" Method
    //Strings shown in lower case or Uppercase
    //“toLowercase()” or “ToUpperCase()” methods against the Strings that need to be converted
    public static void convertStringToUpperLowerCases() {
        //Convert to LowerCase
        String str_Sample = "RockStar";
        System.out.println("Convert to LowerCase: " + str_Sample.toLowerCase());
        //Convert to UpperCase
        System.out.println("Convert to UpperCase: " + str_Sample.toUpperCase());}

}
